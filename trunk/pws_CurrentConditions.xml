<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<ModulePrefs title="__UP_value__" 
						 description="Weather underground personal station current conditions." 
						 author="Jordi Morell" author_email="nospam.hokus04@gmail.com" 
						 title_url="http://www.wunderground.com" 
						 directory_title="Wunderground current conditions." 
						 category="weather" 
						 height="200"/>
	<UserPref name="wnd_id" display_name="Wunderground station id" required="true"/>
	<UserPref name="wnd_units" datatype="enum" display_name="Units" default_value="metric" required="true">
		<EnumValue value="metric" display_value="Metric" />
		<EnumValue value="english" display_value="English" />
	</UserPref>
	<UserPref name="value" display_name="Title" required="true"/>
	<Content type="html">
		<![CDATA[
			<div id="current__MODULE_ID__" style="font-size:12pt; padding:5px; color: black;">Reading xml...</div>
			<div id="debug_div" style="font-size:9pt; padding:5px; color: red;"></div>

			<script type="text/javascript">
					// debug flag. When its value is non-zero, debugging messages are displayed
      		var debug = 0;
      		// The string containing debugging messages
      		var debug_html = "";			
				function displayMenu() {
				  this.name = 'current__MODULE_ID__';
					var prefs = new _IG_Prefs(__MODULE_ID__);
					var wunderID = prefs.getString("wnd_id");
					var units = prefs.getString("wnd_units");
					var url = "http://api.wunderground.com/weatherstation/WXCurrentObXML.asp?ID=" + wunderID + "&rnd=" + Math.random();
					print(url);
					_IG_FetchXmlContent(url, function (response) {
						if (response == null || typeof(response) != "object" || response.firstChild == null) {
							_gel(this.name).innerHTML = "<i>Invalid data.</i>";
					  	return;
						}
					var html = ""; 
					if (units == "metric") {
					  html += response.getElementsByTagName("observation_time")[0].firstChild.data + "<br>";
						html += "Temperature: " + response.getElementsByTagName("temp_c")[0].firstChild.data + " ºC<br>";
						html += "Dew point: " + response.getElementsByTagName("dewpoint_c")[0].firstChild.data + " ºC<br>";
						html += "Relative Humidity: " + response.getElementsByTagName("relative_humidity")[0].firstChild.data + "%<br>";
						html += "Wind speed: " + (parseFloat(response.getElementsByTagName("wind_mph")[0].firstChild.data) * 1.61) + " km/h<br>";
						html += "Wind Gust: " + (parseFloat(response.getElementsByTagName("wind_gust_mph")[0].firstChild.data) * 1.61) + " km/h<br>";
						html += "Pressure: " + response.getElementsByTagName("pressure_mb")[0].firstChild.data + " mb<br>";
						html += "Wind degrees: " + response.getElementsByTagName("wind_degrees")[0].firstChild.data + "º<br>";
						html += "1 Hour Rain: " + response.getElementsByTagName("precip_1hr_metric")[0].firstChild.data + "mm<br>";
						html += "Today Rain: " + response.getElementsByTagName("precip_today_metric")[0].firstChild.data + "mm";
					} else if (units == "english") {
						html += "Temp: " + response.getElementsByTagName("temp_f")[0].firstChild.data + " F<br>";
						html += "Dew point: " + response.getElementsByTagName("dewpoint_f")[0].firstChild.data + " F<br>";
						html += "Relative Humidity: " + response.getElementsByTagName("relative_humidity")[0].firstChild.data + "%<br>";
						html += "Wind speed: " + response.getElementsByTagName("wind_mph")[0].firstChild.data + " mph<br>";
						html += "Wind Gust: " + response.getElementsByTagName("wind_gust_mph")[0].firstChild.data + " mph<br>";
						html += "Pressure: " + response.getElementsByTagName("pressure_in")[0].firstChild.data + " in<br>";
						html += "Wind degrees: " + response.getElementsByTagName("wind_degrees")[0].firstChild.data + "º<br>";
						html += "1 Hour Rain: " + response.getElementsByTagName("precip_1hr_in")[0].firstChild.data + "in<br>";
						html += "Today Rain: " + response.getElementsByTagName("precip_today_in")[0].firstChild.data + "in";
					}
					// Display HTML string
					_gel(this.name).innerHTML = html;
					}, { refreshInterval: 30});	
				}
				// Outputs debug messages if debug flag has a non-zero value
				function print(msg) {
					if (debug) {
						debug_html += msg + "<br>";
						// Write debug HTML to div
						_gel("debug_div").innerHTML = debug_html; 
					}
				}
				_IG_RegisterOnloadHandler(displayMenu);  
			</script>
		]]> 
	</Content> 
</Module>